#!/usr/bin/env python
'''
command to summarize a vasp calculation in a directory

usage:
jaspsum
   this will summarize the calculation in the current directory

jaspsum directoryname
   this will summarize the calculation in the directoryname
'''
import os, sys
from jasp import *
import argparse


# this should not start calculations
JASPRC['mode'] = None


parser = ArgumentParser(description='summarize jasp calculations')

parser.add_option('-d', '--debug',
                  nargs=0,
                  help = 'turn debug on')

parser.add_option('-p', '--plot',
                  nargs=0,
                  help = 'plot in ag')

parser.add_option('-t', '--trajectory',
                  nargs=0,
                  help = 'plot trajectory')

parser.add_option('-r', '--python', '--repr'
                  nargs=0,
                  help = 'prints code to make a new calculation')

parser.add_option('-j','--json',
                  nargs=0,
                  help = 'prints json representation')

parser.add_option('-x', '--xml',
                  nargs=0,
                  help = 'prints xml representation')

parser.add_option('-v', '--vib'
                  nargs=1,
                  help = 'animate a vibrational mode, args= comma-separated list')

parser.add_option('--neb',
                  nargs=0,
                  help = 'plot the neb')

parser.add_option('--eos',
                  nargs=0,
                  help = 'run/plot equation of state')

parser.add_option(nargs='*',
                  metavar='dirs', default = ['.'],
                  help='directories to summarize')

args = parser.parse_args()


if args.d is not None:
    debug = logging.DEBUG
else:
    debug = None

for d in dirs:
    if not os.path.isdir(d):
        raise Exception, '{0} does not exist!'.format(d)

    with jasp(d, debug=debug) as calc:

        # plot trajectory
        if args.t is not None:
            xd = xdat2traj('out.traj',calc=calc)
            try:
                xd.convert()
                os.system('ag out.traj; rm out.traj')
            except ValueError:
                print('unable to show trajectory')

        # plot the atoms
        if args.p is not None:
            atoms = calc.get_atoms()
            from ase.visualize import view
            view(atoms)

        # vibrational movies
        if args.v is not None:
            for mode in [int(x) for x in args.v.split(',')]:
                calc.get_vibrational_modes(mode, show=True)

        if args.neb is not None:
            calc.plot_neb()

        if args.eos is not None:
            from jasp.jasp_eos import *
            JASPRC['mode']='queue'
            try:
                data = calc.get_eos()
                print data
            except (VaspSubmitted, VaspQueued, VaspRunning):
                print 'job in the queue'
            import sys; sys.exit()

        # Finally print the calculator in some representation
        if args.r is not None:
            print repr(calc)
        elif args.j is not None:
            from serialize import *
            print calc.json
        elif args.x is not None:
            from serialize import *
            print calc.xml
        else:
            print calc
